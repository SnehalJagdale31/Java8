package java8;

import java.time.Clock;
import java.time.Instant;
import java.time.LocalDateTime;
import java.time.OffsetDateTime;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.ZonedDateTime;

public class ZonedDateTimeExample {

	private static OffsetDateTime atOffset;

	public static void main(String[] args) {

		ZonedDateTime zonedDateTime = ZonedDateTime.now();
		System.out.println("zonedDateTime "+zonedDateTime);
		System.out.println("zonedOffSet "+zonedDateTime.getOffset());
		System.out.println("zoned id "+zonedDateTime.getZone());
//		System.out.println("available zone "+ZoneId.getAvailableZoneIds());
		ZoneId.getAvailableZoneIds()
		.stream()
		.forEach((zone)->System.out.println(zone));
		System.out.println("Zone Size "+ZoneId.getAvailableZoneIds().size());
		//EST,CST,MST,PST
		System.out.println("Chicago CST"+ZonedDateTime.now(ZoneId.of("America/Chicago")));
		System.out.println("Detroit EST"+ZonedDateTime.now(ZoneId.of("America/Detroit")));
		System.out.println("Denver MST"+ZonedDateTime.now(ZoneId.of("America/Denver")));
		
		System.out.println(ZonedDateTime.now(Clock.system(ZoneId.of("America/Denver"))));
		
		LocalDateTime localDateTime = LocalDateTime.now(ZoneId.of("America/Detroit"));
		System.out.println("Detroit: "+ localDateTime);
		
		

		LocalDateTime localDateTime1 = LocalDateTime.now(Clock.system(ZoneId.of("America/Detroit")));
		System.out.println("Detroit: "+ localDateTime1);
		
		LocalDateTime localDateTime2 = LocalDateTime.ofInstant(Instant.now(), ZoneId.systemDefault());
		System.out.println(localDateTime2);
		
		/**
		 * conert from localDateTime,instant to ZonedLocalDate and time
		 */
		
		LocalDateTime localDateTime3 = LocalDateTime.now();
		System.out.println(localDateTime3.atZone(ZoneId.of("America/Chicago")));
		ZonedDateTime zonedDateTime2 = Instant.now().atZone(ZoneId.of("America/Chicago"));
		System.out.println("zonedDateTime2: "+ zonedDateTime2);
		
		OffsetDateTime atOffset2 = localDateTime3.atOffset(ZoneOffset.ofHours(-6));
		System.out.println(atOffset2);
	
	}
}


